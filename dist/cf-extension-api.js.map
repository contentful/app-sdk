{"version":3,"sources":["signal.ts","channel.ts","initialize.ts","field-locale.ts","field.ts","window.ts","entry.ts","space.ts","dialogs.ts","editor.ts","navigator.ts","app.ts","locations.ts","api.ts","index.ts"],"names":[],"mappings":"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","file":"cf-extension-api.js","sourceRoot":"../lib","sourcesContent":["class Signal {\n  private _id = 0\n  private _listeners = {}\n\n  dispatch(...args) {\n    for (const key in this._listeners) {\n      this._listeners[key](...args)\n    }\n  }\n\n  attach(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener function expected')\n    }\n    const id = this._id++\n    this._listeners[id] = listener\n    // return function that'll detach the listener\n    return () => delete this._listeners[id]\n  }\n}\n\nconst memArgsSymbol = '__private__memoized__arguments__'\n\nclass MemoizedSignal extends Signal {\n  private [memArgsSymbol]: any[] = []\n\n  constructor(...memoizedArgs) {\n    super()\n\n    if (!memoizedArgs.length) {\n      throw new Error('Initial value to be memoized expected')\n    }\n\n    this[memArgsSymbol] = memoizedArgs\n  }\n\n  dispatch(...args) {\n    this[memArgsSymbol] = args\n    super.dispatch(...args)\n  }\n\n  attach(listener) {\n    /*\n     * attaching first so that we throw a sensible\n     * error if listener is not a function without\n     * duplication of is function check\n     */\n    const detachListener = super.attach(listener)\n\n    listener(...this[memArgsSymbol])\n    return detachListener\n  }\n}\n\nexport { Signal, MemoizedSignal }\n","import { Signal } from './signal'\n\nexport default function connect(currentWindow, onConnect) {\n  waitForConnect(currentWindow, (params, messageQueue) => {\n    const channel = new Channel(params.id, currentWindow)\n    onConnect(channel, params, messageQueue)\n  })\n}\n\nfunction waitForConnect(currentWindow, onConnect) {\n  currentWindow.addEventListener('message', listener)\n\n  function listener(event) {\n    const message = event.data\n    if (message.method === 'connect') {\n      currentWindow.removeEventListener('message', listener)\n      onConnect(...message.params)\n    }\n  }\n}\n\nclass Channel {\n  private _messageHandlers = {}\n  private _responseHandlers = {}\n  private _send: ReturnType<typeof createSender>\n\n  constructor(sourceId, currentWindow) {\n    this._send = createSender(sourceId, currentWindow.parent)\n\n    currentWindow.addEventListener('message', event => {\n      this._handleMessage(event.data)\n    })\n  }\n\n  // call method with name `method` exposed by contentful web app `window`\n  call(method, ...params) {\n    const messageId = this._send(method, params)\n    return new Promise((resolve, reject) => {\n      this._responseHandlers[messageId] = { resolve, reject }\n    })\n  }\n\n  send(method, ...params) {\n    this._send(method, params)\n  }\n\n  addHandler(method, handler) {\n    if (!(method in this._messageHandlers)) {\n      this._messageHandlers[method] = new Signal()\n    }\n    return this._messageHandlers[method].attach(handler)\n  }\n\n  private _handleMessage(message) {\n    if (message.method) {\n      const { method, params } = message\n      const handlers = this._messageHandlers[method]\n      if (handlers) {\n        handlers.dispatch(...params)\n      }\n    } else {\n      const { id } = message\n      const responseHandler = this._responseHandlers[id]\n      if (!responseHandler) {\n        return\n      }\n      if ('result' in message) {\n        responseHandler.resolve(message.result)\n      } else if ('error' in message) {\n        // TODO We should wrap this in an Error instance\n        responseHandler.reject(message.error)\n      }\n      delete this._responseHandlers[id]\n    }\n  }\n}\n\nfunction createSender(sourceId, targetWindow) {\n  let messageCount = 0\n  return function send(method, params) {\n    const messageId = messageCount++\n\n    targetWindow.postMessage(\n      {\n        source: sourceId,\n        id: messageId,\n        method,\n        params\n      },\n      '*'\n    )\n\n    return messageId\n  }\n}\n","import connect from './channel'\n\nexport default function createInitializer(currentWindow, apiCreator) {\n  const connectDeferred = createDeferred()\n\n  connectDeferred.promise.then(([channel]) => {\n    const { document } = currentWindow\n    document.addEventListener('focus', () => channel.send('setActive', true), true)\n    document.addEventListener('blur', () => channel.send('setActive', false), true)\n  })\n\n  // We need to connect right away so we can record incoming\n  // messages before `init` is called.\n  connect(\n    currentWindow,\n    (...args) => connectDeferred.resolve(args)\n  )\n\n  return function init(initCb, { makeCustomApi = null } = {}) {\n    connectDeferred.promise.then(([channel, params, messageQueue]) => {\n      const api = apiCreator(channel, params, currentWindow)\n\n      let customApi\n      if (typeof makeCustomApi === 'function') {\n        customApi = makeCustomApi(channel, params)\n      }\n\n      // Handle pending incoming messages.\n      // APIs are created before so handlers are already\n      // registered on the channel.\n      messageQueue.forEach(m => {\n        channel._handleMessage(m)\n      })\n\n      // Hand over control to the developer.\n      initCb(api, customApi)\n    })\n  }\n}\n\nfunction createDeferred<T = any>() {\n  const deferred: {\n    promise: Promise<T>\n    resolve: (value: T | PromiseLike<T>) => void\n  } = {\n    promise: null,\n    resolve: null\n  }\n\n  deferred.promise = new Promise<T>(resolve => {\n    deferred.resolve = resolve\n  })\n\n  return deferred\n}\n","import { MemoizedSignal } from './signal'\nimport { FieldAPI, Items } from './types'\n\nconst INFO_PROPS = ['id', 'locale', 'type', 'required', 'validations', 'items']\n\nexport default class FieldLocale implements FieldAPI {\n  id: string\n  locale: string\n  type: string\n  required: boolean\n  validations: any[]\n  items?: Items\n  private _value: any\n\n  private _valueSignal: MemoizedSignal\n  private _isDisabledSignal: MemoizedSignal\n  private _schemaErrorsChangedSignal: MemoizedSignal\n  private _channel: any\n\n  constructor(channel, fieldInfo) {\n    INFO_PROPS.forEach(prop => {\n      const value = fieldInfo[prop]\n      if (typeof value !== 'undefined') {\n        this[prop] = fieldInfo[prop]\n      }\n    })\n\n    this._value = fieldInfo.value\n    this._valueSignal = new MemoizedSignal(this._value)\n    this._isDisabledSignal = new MemoizedSignal(undefined)\n    this._schemaErrorsChangedSignal = new MemoizedSignal(undefined)\n    this._channel = channel\n\n    channel.addHandler('valueChanged', (id, locale, value) => {\n      if (id === this.id && (!locale || locale === this.locale)) {\n        this._value = value\n        this._valueSignal.dispatch(value)\n      }\n    })\n\n    channel.addHandler('isDisabledChangedForFieldLocale', (id, locale, isDisabled) => {\n      if (id === this.id && locale === this.locale) {\n        this._isDisabledSignal.dispatch(isDisabled)\n      }\n    })\n\n    channel.addHandler('schemaErrorsChanged', errors => {\n      this._schemaErrorsChangedSignal.dispatch(errors)\n    })\n  }\n\n  getValue() {\n    return this._value\n  }\n\n  setValue(value) {\n    this._value = value\n    this._valueSignal.dispatch(value)\n    return this._channel.call('setValue', this.id, this.locale, value)\n  }\n\n  removeValue() {\n    this._value = undefined\n    return this._channel.call('removeValue', this.id, this.locale)\n  }\n\n  setInvalid(isInvalid) {\n    return this._channel.call('setInvalid', isInvalid, this.locale)\n  }\n\n  onValueChanged(handler) {\n    return this._valueSignal.attach(handler)\n  }\n\n  onIsDisabledChanged(handler) {\n    return this._isDisabledSignal.attach(handler)\n  }\n\n  onSchemaErrorsChanged(handler) {\n    return this._schemaErrorsChangedSignal.attach(handler)\n  }\n}\n","import FieldLocale from './field-locale'\nimport { Items } from './types'\n\nconst INFO_PROPS = ['id', 'locales', 'type', 'required', 'validations', 'items']\n\nexport default class Field {\n  private _defaultLocale: string\n  private _fieldLocales: FieldLocale[]\n  items: Items\n\n  constructor(channel, info, defaultLocale) {\n    INFO_PROPS.forEach(prop => {\n      const value = info[prop]\n      if (typeof value !== 'undefined') {\n        this[prop] = info[prop]\n      }\n    })\n\n    this._defaultLocale = defaultLocale\n\n    this._fieldLocales = info.locales.reduce((acc, locale) => {\n      const fieldLocale = new FieldLocale(channel, {\n        id: info.id,\n        type: info.type,\n        required: info.required,\n        validations: info.validations,\n        items: info.items,\n        locale,\n        value: info.values[locale]\n      })\n\n      return { ...acc, [locale]: fieldLocale }\n    }, {})\n\n    assertHasLocale(this, defaultLocale)\n  }\n\n  getValue(locale) {\n    return this._getFieldLocale(locale).getValue()\n  }\n\n  setValue(value, locale) {\n    return this._getFieldLocale(locale).setValue(value)\n  }\n\n  removeValue(locale) {\n    return this.setValue(undefined, locale)\n  }\n\n  onValueChanged(locale, handler) {\n    if (!handler) {\n      handler = locale\n      locale = undefined\n    }\n    return this._getFieldLocale(locale).onValueChanged(handler)\n  }\n\n  onIsDisabledChanged(locale, handler) {\n    if (!handler) {\n      handler = locale\n      locale = undefined\n    }\n\n    return this._getFieldLocale(locale).onIsDisabledChanged(handler)\n  }\n\n  private _getFieldLocale(locale) {\n    locale = locale || this._defaultLocale\n    assertHasLocale(this, locale)\n    return this._fieldLocales[locale]\n  }\n\n  getForLocale(locale) {\n    if (!locale) {\n      throw new Error('getForLocale must be passed a locale')\n    }\n\n    return this._getFieldLocale(locale)\n  }\n}\n\nfunction assertHasLocale(field, locale) {\n  if (!field._fieldLocales[locale]) {\n    throw new Error(`Unknown locale \"${locale}\" for field \"${field.id}\"`)\n  }\n}\n","export default function createWindow(currentWindow, channel) {\n  const { document, MutationObserver } = currentWindow\n\n  const autoUpdateHeight = () => {\n    self.updateHeight()\n  }\n  const observer = new MutationObserver(autoUpdateHeight)\n  let oldHeight = null\n  let isAutoResizing = false\n\n  const self = { startAutoResizer, stopAutoResizer, updateHeight }\n  return self\n\n  function startAutoResizer() {\n    self.updateHeight()\n    if (isAutoResizing) {\n      return\n    }\n    isAutoResizing = true\n    observer.observe(document.body, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n      characterData: true\n    })\n    currentWindow.addEventListener('resize', autoUpdateHeight)\n  }\n\n  function stopAutoResizer() {\n    if (!isAutoResizing) {\n      return\n    }\n    isAutoResizing = false\n    observer.disconnect()\n    currentWindow.removeEventListener('resize', autoUpdateHeight)\n  }\n\n  function updateHeight(height: number | null = null) {\n    if (height === null) {\n      height = Math.ceil(document.documentElement.getBoundingClientRect().height)\n    }\n\n    if (height !== oldHeight) {\n      channel.send('setHeight', height)\n      oldHeight = height\n    }\n  }\n}\n","import { MemoizedSignal } from './signal'\n\nexport default function createEntry(channel, entryData, fieldInfo, createEntryField) {\n  let sys = entryData.sys\n  const sysChanged = new MemoizedSignal(sys)\n\n  channel.addHandler('sysChanged', _sys => {\n    sys = _sys\n    sysChanged.dispatch(sys)\n  })\n\n  return {\n    getSys() {\n      return sys\n    },\n    onSysChanged(handler) {\n      return sysChanged.attach(handler)\n    },\n    fields: fieldInfo.reduce((acc, info) => {\n      acc[info.id] = createEntryField(info)\n      return acc\n    }, {})\n  }\n}\n","import { SpaceAPI } from './types'\n\nconst spaceMethods: Array<keyof SpaceAPI> = [\n  'getContentType',\n  'getEntry',\n  'getEntrySnapshots',\n  'getAsset',\n  'getEditorInterface',\n\n  'getPublishedEntries',\n  'getPublishedAssets',\n  'getContentTypes',\n  'getEntries',\n  'getEditorInterfaces',\n  'getAssets',\n\n  'createContentType',\n  'createEntry',\n  'createAsset',\n\n  'updateContentType',\n  'updateEntry',\n  'updateAsset',\n\n  'deleteContentType',\n  'deleteEntry',\n  'deleteAsset',\n\n  'publishEntry',\n  'publishAsset',\n  'unpublishEntry',\n  'unpublishAsset',\n\n  'archiveEntry',\n  'archiveAsset',\n  'unarchiveEntry',\n  'unarchiveAsset',\n\n  'createUpload',\n  'processAsset',\n  'waitUntilAssetProcessed',\n\n  'getUsers',\n\n  'getAllScheduledActions',\n  'getEntityScheduledActions'\n]\n\nexport default function createSpace(channel, initialContentTypes) {\n  const space = {} as SpaceAPI\n\n  spaceMethods.forEach(methodName => {\n    space[methodName] = function(...args) {\n      return channel.call('callSpaceMethod', methodName, args)\n    }\n  })\n\n  space.getCachedContentTypes = () => {\n    return [...initialContentTypes]\n  }\n\n  return space\n}\n","const isObject = o => typeof o === 'object' && o !== null && !Array.isArray(o)\nconst prepareOptions = options => (isObject(options) ? options : {})\n\nexport default function createDialogs(channel, ids) {\n  return {\n    openAlert: openSimpleDialog.bind(null, 'alert'),\n    openConfirm: openSimpleDialog.bind(null, 'confirm'),\n    openPrompt: openSimpleDialog.bind(null, 'prompt'),\n    openExtension: openExtensionDialog,\n    openCurrentApp: openCurrentAppDialog,\n    selectSingleEntry: openEntitySelector.bind(null, 'Entry', false),\n    selectSingleAsset: openEntitySelector.bind(null, 'Asset', false),\n    selectMultipleEntries: openEntitySelector.bind(null, 'Entry', true),\n    selectMultipleAssets: openEntitySelector.bind(null, 'Asset', true)\n  }\n\n  function openSimpleDialog(type, options?) {\n    return channel.call('openDialog', type, prepareOptions(options))\n  }\n\n  function openExtensionDialog(options?) {\n    options = prepareOptions(options)\n\n    // Use provided ID, default to the current extension.\n    options.id = options.id || ids.extension\n\n    if (options.id) {\n      return channel.call('openDialog', 'extension', options)\n    } else {\n      throw new Error('Extension ID not provided.')\n    }\n  }\n\n  function openCurrentAppDialog(options?) {\n    options = prepareOptions(options)\n\n    // Force ID of the current app.\n    options.id = ids.app\n\n    if (options.id) {\n      return channel.call('openDialog', 'app', options)\n    } else {\n      throw new Error('Not in the app context.')\n    }\n  }\n\n  function openEntitySelector(entityType, multiple, options?) {\n    options = prepareOptions(options)\n    options.entityType = entityType\n    options.multiple = multiple\n\n    return channel.call('openDialog', 'entitySelector', options)\n  }\n}\n","import { MemoizedSignal } from './signal'\n\nexport default function createEditor(channel, editorInterface) {\n  const _localeSettingsSygnal = new MemoizedSignal(undefined)\n  const _showDisabledFieldsSygnal = new MemoizedSignal(undefined)\n\n  channel.addHandler('localeSettingsChanged', settings => {\n    _localeSettingsSygnal.dispatch(settings)\n  })\n\n  channel.addHandler('showDisabledFieldsChanged', showDisabledFields => {\n    _showDisabledFieldsSygnal.dispatch(showDisabledFields)\n  })\n\n  return {\n    editorInterface,\n    onLocaleSettingsChanged: handler => {\n      return _localeSettingsSygnal.attach(handler)\n    },\n    onShowDisabledFieldsChanged: handler => {\n      return _showDisabledFieldsSygnal.attach(handler)\n    }\n  }\n}\n","import { Signal } from './signal'\n\nexport default function createNavigator(channel, ids) {\n  const _onSlideInSignal = new Signal()\n\n  channel.addHandler('navigateSlideIn', data => {\n    _onSlideInSignal.dispatch(data)\n  })\n\n  return {\n    openEntry: (id, opts) => {\n      return channel.call('navigateToContentEntity', { ...opts, entityType: 'Entry', id })\n    },\n    openNewEntry: (contentTypeId, opts) => {\n      return channel.call('navigateToContentEntity', {\n        ...opts,\n        entityType: 'Entry',\n        id: null,\n        contentTypeId\n      })\n    },\n    openBulkEditor: (entryId, opts) => {\n      return channel.call('navigateToBulkEditor', {\n        entryId,\n        ...opts\n      })\n    },\n    openAsset: (id, opts) => {\n      return channel.call('navigateToContentEntity', { ...opts, entityType: 'Asset', id })\n    },\n    openNewAsset: opts => {\n      return channel.call('navigateToContentEntity', { ...opts, entityType: 'Asset', id: null })\n    },\n    openPageExtension: opts => {\n      return channel.call('navigateToPage', { type: 'extension', id: ids.extension, ...opts })\n    },\n    openCurrentAppPage: opts => {\n      return channel.call('navigateToPage', { type: 'app', id: ids.app, ...opts })\n    },\n    onSlideInNavigation: handler => {\n      return _onSlideInSignal.attach(handler)\n    }\n  }\n}\n","const HOOK_STAGE_PRE_INSTALL = 'preInstall'\nconst HOOK_STAGE_POST_INSTALL = 'postInstall'\n\nconst isObject = o => typeof o === 'object' && o !== null && !Array.isArray(o)\nconst isFunction = f => typeof f === 'function'\nconst isPromise = p => isObject(p) && isFunction(p.then)\n\nconst runHandler = (handler, defaultResult, handlerArg?) => {\n  // Handler was not registered. Registering a handler is not\n  // required. We resolve with the default provided in this case.\n  if (!isFunction(handler)) {\n    return Promise.resolve(defaultResult)\n  }\n\n  // If handler is synchronous it can throw and we need to\n  // catch it. We resolve with `false` in this case.\n  let maybeResultPromise\n  try {\n    maybeResultPromise = typeof handlerArg === 'undefined' ? handler() : handler(handlerArg)\n  } catch (err) {\n    return Promise.resolve(false)\n  }\n\n  // If handler is synchronous, we wrap the result with a promise\n  // and deal only with Promises API below.\n  let resultPromise = maybeResultPromise\n  if (!isPromise(resultPromise)) {\n    resultPromise = Promise.resolve(resultPromise)\n  }\n\n  return resultPromise\n    .then(\n      result => {\n        if (result instanceof Error || result === false) {\n          return false\n        } else if (!isObject(result)) {\n          return defaultResult\n        } else {\n          return result\n        }\n      },\n      () => false\n    )\n    .catch(() => false)\n}\n\nexport default function createApp(channel) {\n  const handlers = {\n    [HOOK_STAGE_PRE_INSTALL]: null,\n    [HOOK_STAGE_POST_INSTALL]: null\n  }\n\n  const setHandler = (stage, handler) => {\n    if (!isFunction(handler)) {\n      throw new Error('Handler must be a function.')\n    } else {\n      handlers[stage] = handler\n    }\n  }\n\n  channel.addHandler('appHook', ({ stage, installationRequestId, err }) => {\n    if (stage === HOOK_STAGE_PRE_INSTALL) {\n      return runHandler(handlers[stage], {}).then(result => {\n        return channel.send('appHookResult', { stage, installationRequestId, result })\n      })\n    } else if (stage === HOOK_STAGE_POST_INSTALL) {\n      return runHandler(handlers[stage], undefined, err || null).then(() => {\n        return channel.send('appHookResult', { stage, installationRequestId })\n      })\n    } else {\n      return Promise.resolve()\n    }\n  })\n\n  return {\n    setReady() {\n      return channel.call('callAppMethod', 'setReady')\n    },\n    isInstalled() {\n      return channel.call('callAppMethod', 'isInstalled')\n    },\n    getParameters() {\n      return channel.call('callAppMethod', 'getParameters')\n    },\n    onConfigure(handler) {\n      setHandler(HOOK_STAGE_PRE_INSTALL, handler)\n    },\n    onConfigurationCompleted(handler) {\n      setHandler(HOOK_STAGE_POST_INSTALL, handler)\n    }\n  }\n}\n","import { Locations } from './types'\n\nconst locations: Locations = {\n  LOCATION_ENTRY_FIELD: 'entry-field',\n  LOCATION_ENTRY_FIELD_SIDEBAR: 'entry-field-sidebar',\n  LOCATION_ENTRY_SIDEBAR: 'entry-sidebar',\n  LOCATION_DIALOG: 'dialog',\n  LOCATION_ENTRY_EDITOR: 'entry-editor',\n  LOCATION_PAGE: 'page',\n  LOCATION_APP_CONFIG: 'app-config'\n}\n\nexport default locations\n","import Field from './field'\nimport FieldLocale from './field-locale'\nimport createWindow from './window'\nimport createEntry from './entry'\nimport createSpace from './space'\nimport createDialogs from './dialogs'\nimport createEditor from './editor'\nimport createNavigator from './navigator'\nimport createApp from './app'\nimport locations from './locations'\n\nconst DEFAULT_API_PRODUCERS = [\n  makeSharedAPI,\n  makeEntryAPI,\n  makeFieldAPI,\n  makeEditorAPI,\n  makeWindowAPI\n]\n\nconst LOCATION_TO_API_PRODUCERS = {\n  [locations.LOCATION_ENTRY_FIELD]: DEFAULT_API_PRODUCERS,\n  [locations.LOCATION_ENTRY_FIELD_SIDEBAR]: DEFAULT_API_PRODUCERS,\n  [locations.LOCATION_ENTRY_SIDEBAR]: [makeSharedAPI, makeEntryAPI, makeEditorAPI, makeWindowAPI],\n  [locations.LOCATION_ENTRY_EDITOR]: [makeSharedAPI, makeEntryAPI, makeEditorAPI],\n  [locations.LOCATION_DIALOG]: [makeSharedAPI, makeDialogAPI, makeWindowAPI],\n  [locations.LOCATION_PAGE]: [makeSharedAPI],\n  [locations.LOCATION_APP_CONFIG]: [makeSharedAPI, makeAppAPI]\n}\n\nexport default function createAPI(channel, data, currentWindow) {\n  const producers = LOCATION_TO_API_PRODUCERS[data.location] || DEFAULT_API_PRODUCERS\n\n  return producers.reduce((api, produce) => {\n    return { ...api, ...produce(channel, data, currentWindow) }\n  }, {})\n}\n\nfunction makeSharedAPI(channel, data) {\n  const { user, parameters, locales, ids, initialContentTypes } = data\n  const currentLocation = data.location || locations.LOCATION_ENTRY_FIELD\n\n  return {\n    location: {\n      is: tested => currentLocation === tested\n    },\n    user,\n    parameters,\n    locales: {\n      available: locales.available,\n      default: locales.default,\n      names: locales.names,\n      fallbacks: locales.fallbacks,\n      optional: locales.optional,\n      direction: locales.direction\n    },\n    space: createSpace(channel, initialContentTypes),\n    dialogs: createDialogs(channel, ids),\n    navigator: createNavigator(channel, ids),\n    notifier: {\n      success: message => channel.send('notify', { type: 'success', message }),\n      error: message => channel.send('notify', { type: 'error', message })\n    },\n    ids,\n    access: {\n      can: (action, entity) => channel.call('checkAccess', action, entity)\n    }\n  }\n}\n\nfunction makeWindowAPI(channel, _data, currentWindow) {\n  return {\n    window: createWindow(currentWindow, channel)\n  }\n}\n\nfunction makeEditorAPI(channel, data) {\n  const { editorInterface } = data\n  return {\n    editor: createEditor(channel, editorInterface)\n  }\n}\n\nfunction makeEntryAPI(channel, { locales, contentType, entry, fieldInfo }) {\n  const createEntryField = info => new Field(channel, info, locales.default)\n\n  return {\n    contentType,\n    entry: createEntry(channel, entry, fieldInfo, createEntryField)\n  }\n}\n\nfunction makeFieldAPI(channel, { field }) {\n  return {\n    field: new FieldLocale(channel, field)\n  }\n}\n\nfunction makeDialogAPI(channel) {\n  return {\n    close: data => channel.send('closeDialog', data)\n  }\n}\n\nfunction makeAppAPI(channel) {\n  const app = createApp(channel)\n\n  return {\n    app\n  }\n}\n","import createInitializer from './initialize'\nimport createAPI from './api'\nimport locations from './locations'\n\n// `export = {}` to allow direct CommonJS `require()` instead of `require().default`\nexport = {\n  init: createInitializer(window, createAPI),\n  locations\n}\n"]}