version: 2.1

cache-key: &cache-key
  key: dependency-cache-primary-{{ arch }}-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}

jobs:
  unit:
    docker:
      - image: cypress/browsers:node12.18.0-chrome83-ff77
        environment:
          ## this enables colors in the output
          TERM: xterm
    environment:
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - checkout
      - restore_cache: *cache-key
      - run: npm ci
      - run:
          name: Reverting "package-lock.json"
          # `npm install` can modify `package-lock.json`. If it happens, we're caching dependencies
          # with a wrong key. To mitigate this problem we restore the original lock file.
          command: git checkout -- package-lock.json
      - save_cache:
          <<: *cache-key
          paths:
            - ./node_modules
      - run: npm run lint
      - run: npm test
      - run: npm run build
      - run: npm run size
  integration:
    docker:
      - image: cypress/browsers:node12.18.0-chrome83-ff77
        environment:
          ## this enables colors in the output
          TERM: xterm
    steps:
      - checkout
      - restore_cache: *cache-key
      - run: npm ci
      - run:
          name: Reverting "package-lock.json"
          # `npm install` can modify `package-lock.json`. If it happens, we're caching dependencies
          # with a wrong key. To mitigate this problem we restore the original lock file.
          command: git checkout -- package-lock.json
      - save_cache:
          <<: *cache-key
          paths:
            - ./node_modules
      - run: npm run build
      - run:
          name: npm run integration
          command: |
            set -e
            npm run integration
      - run: npm run merge-report
      - run: npm run generate-report
      - store_artifacts:
          path: test/cypress/reports
      - store_artifacts:
          path: test/cypress/screenshots
      - store_artifacts:
          path: test/cypress/videos

  semantic-release:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Setup NPM
          command: |
            echo $'@contentful:registry=https://registry.npmjs.org/
            //registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> ~/.npmrc
      - run: npm ci
      - run:
          name: Releasing
          command: npm run semantic-release

workflows:
  version: 2
  # run on every commit
  commit:
    jobs:
      - unit
      - integration
      - semantic-release:
          requires:
            - unit
            - integration
          filters:
            branches:
              only:
                - master

  # run in master every hour, 0:40, 1:40...
  schedule:
    jobs:
      - integration
    triggers:
      - schedule:
          cron: '0 * * * *'
          filters:
            branches:
              only:
                - master
