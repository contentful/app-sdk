<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.1930" tests="399" failures="0">
  <testsuite name="Root Suite" timestamp="2021-05-28T14:36:13" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="createAPI()" timestamp="2021-05-28T14:36:13" tests="5" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/api.spec.ts" time="0.0850" failures="0">
    <testcase name="createAPI() returns correct shape of the default API (entry-field and entry-field-sidebar)" time="0.0650" classname="returns correct shape of the default API (entry-field and entry-field-sidebar)">
    </testcase>
    <testcase name="createAPI() returns correct shape of the sidebar API (entry-sidebar)" time="0.0050" classname="returns correct shape of the sidebar API (entry-sidebar)">
    </testcase>
    <testcase name="createAPI() returns correct shape of the entry editor API (entry-editor)" time="0.0050" classname="returns correct shape of the entry editor API (entry-editor)">
    </testcase>
    <testcase name="createAPI() returns correct shape of the dialog API (dialog)" time="0.0050" classname="returns correct shape of the dialog API (dialog)">
    </testcase>
    <testcase name="createAPI() returns correct shape of the app API (app)" time="0.0050" classname="returns correct shape of the app API (app)">
    </testcase>
  </testsuite>
  <testsuite name="createApp()" timestamp="2021-05-28T14:36:13" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="returned &quot;app&quot; object" timestamp="2021-05-28T14:36:13" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name=".setReady()" timestamp="2021-05-28T14:36:13" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0020" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .setReady() is a function" time="0.0010" classname="is a function">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .setReady() invokes channel.call(&apos;callAppMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callAppMethod&apos;)">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .setReady() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".isInstalled()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0000" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .isInstalled() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .isInstalled() invokes channel.call(&apos;callAppMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callAppMethod&apos;)">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .isInstalled() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getParameters()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0000" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .getParameters() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .getParameters() invokes channel.call(&apos;callAppMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callAppMethod&apos;)">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .getParameters() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".onConfigure(handler)" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0010" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) requires the handler to be a function" time="0.0000" classname="requires the handler to be a function">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) will only call the last added handler" time="0.0000" classname="will only call the last added handler">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) does the exchange when handler is not defined" time="0.0010" classname="does the exchange when handler is not defined">
    </testcase>
  </testsuite>
  <testsuite name="the exchange when handler is a synchronous function" timestamp="2021-05-28T14:36:14" tests="5" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0190" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is a synchronous function returns hash of empty parameters" time="0.0010" classname="returns hash of empty parameters">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is a synchronous function returns hash of non-empty parameters" time="0.0000" classname="returns hash of non-empty parameters">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is a synchronous function returns false" time="0.0000" classname="returns false">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is a synchronous function returns false when an error is thrown" time="0.0180" classname="returns false when an error is thrown">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is a synchronous function returns empty hash of parameters if a non-object is returned" time="0.0000" classname="returns empty hash of parameters if a non-object is returned">
    </testcase>
  </testsuite>
  <testsuite name="the exchange when handler is an async function" timestamp="2021-05-28T14:36:14" tests="6" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0060" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is an async function returns hash of empty parameters" time="0.0000" classname="returns hash of empty parameters">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is an async function returns hash of non-empty parameters" time="0.0000" classname="returns hash of non-empty parameters">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is an async function returns false" time="0.0010" classname="returns false">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is an async function returns false when an error is thrown" time="0.0030" classname="returns false when an error is thrown">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is an async function returns false when a promise rejects" time="0.0020" classname="returns false when a promise rejects">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigure(handler) the exchange when handler is an async function returns empty hash of parameters if a non-object is returned" time="0.0000" classname="returns empty hash of parameters if a non-object is returned">
    </testcase>
  </testsuite>
  <testsuite name=".onConfigurationCompleted(handler)" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0010" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) requires the handler to be a function" time="0.0000" classname="requires the handler to be a function">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) will only call the last added handler" time="0.0000" classname="will only call the last added handler">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) does the exchange when handler is not defined" time="0.0010" classname="does the exchange when handler is not defined">
    </testcase>
  </testsuite>
  <testsuite name="the exchange when handler is a synchronous function" timestamp="2021-05-28T14:36:14" tests="5" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0030" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is a synchronous function returns hash of empty parameters" time="0.0000" classname="returns hash of empty parameters">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is a synchronous function returns hash of non-empty parameters" time="0.0000" classname="returns hash of non-empty parameters">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is a synchronous function returns false" time="0.0000" classname="returns false">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is a synchronous function returns false when an error is thrown" time="0.0020" classname="returns false when an error is thrown">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is a synchronous function returns empty hash of parameters if a non-object is returned" time="0.0010" classname="returns empty hash of parameters if a non-object is returned">
    </testcase>
  </testsuite>
  <testsuite name="the exchange when handler is an async function" timestamp="2021-05-28T14:36:14" tests="6" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/app.spec.ts" time="0.0070" failures="0">
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is an async function returns hash of empty parameters" time="0.0000" classname="returns hash of empty parameters">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is an async function returns hash of non-empty parameters" time="0.0000" classname="returns hash of non-empty parameters">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is an async function returns false" time="0.0010" classname="returns false">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is an async function returns false when an error is thrown" time="0.0040" classname="returns false when an error is thrown">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is an async function returns false when a promise rejects" time="0.0020" classname="returns false when a promise rejects">
    </testcase>
    <testcase name="createApp() returned &quot;app&quot; object .onConfigurationCompleted(handler) the exchange when handler is an async function returns empty hash of parameters if a non-object is returned" time="0.0000" classname="returns empty hash of parameters if a non-object is returned">
    </testcase>
  </testsuite>
  <testsuite name="channel connect" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/channel.spec.ts" time="0.0020" failures="0">
    <testcase name="channel connect resolves with channel and params on connect event" time="0.0020" classname="resolves with channel and params on connect event">
    </testcase>
  </testsuite>
  <testsuite name="channel instance" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/channel.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="#send()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/channel.spec.ts" time="0.0000" failures="0">
    <testcase name="channel connect channel instance #send() calls post message with parameters" time="0.0000" classname="calls post message with parameters">
    </testcase>
  </testsuite>
  <testsuite name="#call()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/channel.spec.ts" time="0.0040" failures="0">
    <testcase name="channel connect channel instance #call() calls post message with parameters" time="0.0000" classname="calls post message with parameters">
    </testcase>
    <testcase name="channel connect channel instance #call() resolves promise when result is received" time="0.0020" classname="resolves promise when result is received">
    </testcase>
    <testcase name="channel connect channel instance #call() rejects promise when error is received" time="0.0020" classname="rejects promise when error is received">
    </testcase>
  </testsuite>
  <testsuite name="#addHandler()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/channel.spec.ts" time="0.0020" failures="0">
    <testcase name="channel connect channel instance #addHandler() calls callback when message is received" time="0.0020" classname="calls callback when message is received">
    </testcase>
  </testsuite>
  <testsuite name="DeleteStaleEnvironments" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/delete-stale-environments.spec.ts" time="0.0020" failures="0">
    <testcase name="DeleteStaleEnvironments should delete an environment that is older than one day and not a proteced environment" time="0.0020" classname="should delete an environment that is older than one day and not a proteced environment">
    </testcase>
  </testsuite>
  <testsuite name="createDialogs()" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="returned &quot;dialogs&quot; object" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name=".openAlert()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0010" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openAlert() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openAlert() invokes channel.call(&apos;openDialog&apos;)" time="0.0010" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openAlert() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openConfirm()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0010" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openConfirm() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openConfirm() invokes channel.call(&apos;openDialog&apos;)" time="0.0010" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openConfirm() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openPrompt()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0010" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openPrompt() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openPrompt() invokes channel.call(&apos;openDialog&apos;)" time="0.0000" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openPrompt() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".selectSingleEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0010" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectSingleEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectSingleEntry() invokes channel.call(&apos;openDialog&apos;)" time="0.0000" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectSingleEntry() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".selectSingleAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectSingleAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectSingleAsset() invokes channel.call(&apos;openDialog&apos;)" time="0.0000" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectSingleAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".selectMultipleEntries()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0010" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectMultipleEntries() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectMultipleEntries() invokes channel.call(&apos;openDialog&apos;)" time="0.0010" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectMultipleEntries() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".selectMultipleAssets()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0010" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectMultipleAssets() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectMultipleAssets() invokes channel.call(&apos;openDialog&apos;)" time="0.0010" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .selectMultipleAssets() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openExtension()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openExtension() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openExtension() invokes channel.call(&apos;openDialog&apos;)" time="0.0000" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openExtension() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openExtension()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openExtension() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openExtension() invokes channel.call(&apos;openDialog&apos;)" time="0.0000" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openExtension() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openExtension()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openExtension() throws if no extension ID is provided (no ID option, app location)" time="0.0000" classname="throws if no extension ID is provided (no ID option, app location)">
    </testcase>
  </testsuite>
  <testsuite name=".openCurrentApp()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openCurrentApp() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openCurrentApp() invokes channel.call(&apos;openDialog&apos;)" time="0.0000" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openCurrentApp() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openCurrentApp()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openCurrentApp() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openCurrentApp() invokes channel.call(&apos;openDialog&apos;)" time="0.0000" classname="invokes channel.call(&apos;openDialog&apos;)">
    </testcase>
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openCurrentApp() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openCurrentApp()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/dialogs.spec.ts" time="0.0000" failures="0">
    <testcase name="createDialogs() returned &quot;dialogs&quot; object .openCurrentApp() throws if not in app context" time="0.0000" classname="throws if not in app context">
    </testcase>
  </testsuite>
  <testsuite name="createEditor()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/editor.spec.ts" time="0.0000" failures="0">
    <testcase name="createEditor() should return editorInterface" time="0.0000" classname="should return editorInterface">
    </testcase>
  </testsuite>
  <testsuite name=".onLocaleSettingsChanged(handler)" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/editor.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="default behaviour" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/editor.spec.ts" time="0.0000" failures="0">
    <testcase name="createEditor() .onLocaleSettingsChanged(handler) default behaviour returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/editor.spec.ts" time="0.0000" failures="0">
    <testcase name="createEditor() .onLocaleSettingsChanged(handler) default behaviour returned function can be executed without error" time="0.0000" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name=".onShowDisabledFieldsChanged(handler)" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/editor.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="default behaviour" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/editor.spec.ts" time="0.0000" failures="0">
    <testcase name="createEditor() .onShowDisabledFieldsChanged(handler) default behaviour returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/editor.spec.ts" time="0.0000" failures="0">
    <testcase name="createEditor() .onShowDisabledFieldsChanged(handler) default behaviour returned function can be executed without error" time="0.0000" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name="createEntry()" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="returned &quot;entry&quot; object" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object subscribed to injected Channel&apos;s &quot;sysChanged&quot;" time="0.0000" classname="subscribed to injected Channel&apos;s &quot;sysChanged&quot;">
    </testcase>
  </testsuite>
  <testsuite name=".fields[id]" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0010" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object .fields[id] exists for each constructor given field info" time="0.0000" classname="exists for each constructor given field info">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object .fields[id] got instantiated with its related constructor given field info" time="0.0010" classname="got instantiated with its related constructor given field info">
    </testcase>
  </testsuite>
  <testsuite name="entry methods" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="calls task API methods" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name=".getTasks()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0010" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .getTasks() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .getTasks() invokes channel.call(&apos;callEntryMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callEntryMethod&apos;)">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .getTasks() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getTask()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .getTask() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .getTask() invokes channel.call(&apos;callEntryMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callEntryMethod&apos;)">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .getTask() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".createTask()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .createTask() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .createTask() invokes channel.call(&apos;callEntryMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callEntryMethod&apos;)">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .createTask() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".updateTask()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .updateTask() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .updateTask() invokes channel.call(&apos;callEntryMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callEntryMethod&apos;)">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .updateTask() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".deleteTask()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .deleteTask() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .deleteTask() invokes channel.call(&apos;callEntryMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callEntryMethod&apos;)">
    </testcase>
    <testcase name="createEntry() returned &quot;entry&quot; object entry methods calls task API methods .deleteTask() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getSys()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object .getSys() returns entryData.sys given to constructor" time="0.0000" classname="returns entryData.sys given to constructor">
    </testcase>
  </testsuite>
  <testsuite name=".onSysChanged(handler)" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object .onSysChanged(handler) calls handler immediately on attach with initial value of sys" time="0.0000" classname="calls handler immediately on attach with initial value of sys">
    </testcase>
  </testsuite>
  <testsuite name="default behaviour" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object .onSysChanged(handler) default behaviour returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object .onSysChanged(handler) default behaviour returned function can be executed without error" time="0.0000" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name="injected channel propagating &quot;sysChanged&quot;" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object injected channel propagating &quot;sysChanged&quot; replaces current sys with the given one" time="0.0000" classname="replaces current sys with the given one">
    </testcase>
  </testsuite>
  <testsuite name=".metadata" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/entry.spec.ts" time="0.0000" failures="0">
    <testcase name="createEntry() returned &quot;entry&quot; object .metadata should add a metadata field to the entry if passed in from web app" time="0.0000" classname="should add a metadata field to the entry if passed in from web app">
    </testcase>
  </testsuite>
  <testsuite name="FieldLocale" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name=".id" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .id is equal to info.id" time="0.0000" classname="is equal to info.id">
    </testcase>
  </testsuite>
  <testsuite name=".type" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .type is equal to info.type" time="0.0000" classname="is equal to info.type">
    </testcase>
  </testsuite>
  <testsuite name=".locale" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .locale is set to the same value as given to first constructor arg&apos;s .locale" time="0.0000" classname="is set to the same value as given to first constructor arg&apos;s .locale">
    </testcase>
  </testsuite>
  <testsuite name=".required" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .required is equal to info.required" time="0.0000" classname="is equal to info.required">
    </testcase>
  </testsuite>
  <testsuite name=".validations" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .validations is equal to info.validations" time="0.0000" classname="is equal to info.validations">
    </testcase>
  </testsuite>
  <testsuite name=".items" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .items is set to the same value as info.items" time="0.0000" classname="is set to the same value as info.items">
    </testcase>
    <testcase name="FieldLocale .items is skipped on the object if not defined in info" time="0.0000" classname="is skipped on the object if not defined in info">
    </testcase>
  </testsuite>
  <testsuite name=".getValue()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .getValue() returns the most recently received value" time="0.0000" classname="returns the most recently received value">
    </testcase>
  </testsuite>
  <testsuite name=".setValue(value)" timestamp="2021-05-28T14:36:14" tests="4" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0010" failures="0">
    <testcase name="FieldLocale .setValue(value) sets the value to new-value" time="0.0000" classname="sets the value to new-value">
    </testcase>
    <testcase name="FieldLocale .setValue(value) invokes channel.call(&quot;setValue&quot;, ...)" time="0.0000" classname="invokes channel.call(&quot;setValue&quot;, ...)">
    </testcase>
    <testcase name="FieldLocale .setValue(value) returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
    <testcase name="FieldLocale .setValue(value) calls onValueChanged handler" time="0.0010" classname="calls onValueChanged handler">
    </testcase>
  </testsuite>
  <testsuite name=".removeValue()" timestamp="2021-05-28T14:36:14" tests="4" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0020" failures="0">
    <testcase name="FieldLocale .removeValue() sets the value to undefined" time="0.0010" classname="sets the value to undefined">
    </testcase>
    <testcase name="FieldLocale .removeValue() invokes channel.call(&quot;removeValue&quot;, ...)" time="0.0000" classname="invokes channel.call(&quot;removeValue&quot;, ...)">
    </testcase>
    <testcase name="FieldLocale .removeValue() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
    <testcase name="FieldLocale .removeValue() calls onValueChanged handler" time="0.0000" classname="calls onValueChanged handler">
    </testcase>
  </testsuite>
  <testsuite name=".setInvalid()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .setInvalid() invokes channel.call(&quot;setInvalid&quot;, ...)" time="0.0000" classname="invokes channel.call(&quot;setInvalid&quot;, ...)">
    </testcase>
  </testsuite>
  <testsuite name=".onIsDisabledChanged(handler)" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .onIsDisabledChanged(handler) calls handler when method is received" time="0.0000" classname="calls handler when method is received">
    </testcase>
    <testcase name="FieldLocale .onIsDisabledChanged(handler) calls handler with last received message" time="0.0000" classname="calls handler with last received message">
    </testcase>
  </testsuite>
  <testsuite name=".onSchemaErrorsChanged(handler)" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .onSchemaErrorsChanged(handler) calls handler when method is received" time="0.0000" classname="calls handler when method is received">
    </testcase>
    <testcase name="FieldLocale .onSchemaErrorsChanged(handler) calls handler with last received message" time="0.0000" classname="calls handler with last received message">
    </testcase>
  </testsuite>
  <testsuite name=".onValueChanged(handler)" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0010" failures="0">
    <testcase name="FieldLocale .onValueChanged(handler) calls handler immediately on attach with most recently received value" time="0.0010" classname="calls handler immediately on attach with most recently received value">
    </testcase>
    <testcase name="FieldLocale .onValueChanged(handler) calls handler when value change is received" time="0.0000" classname="calls handler when value change is received">
    </testcase>
    <testcase name="FieldLocale .onValueChanged(handler) does not call handler when other field value changes" time="0.0000" classname="does not call handler when other field value changes">
    </testcase>
  </testsuite>
  <testsuite name="default behaviour" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .onValueChanged(handler) default behaviour returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field-locale.spec.ts" time="0.0000" failures="0">
    <testcase name="FieldLocale .onValueChanged(handler) default behaviour returned function can be executed without error" time="0.0000" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name="Field" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="construction error" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0010" failures="0">
    <testcase name="Field construction error gets thrown if defaultLocale is not included in info.locales" time="0.0010" classname="gets thrown if defaultLocale is not included in info.locales">
    </testcase>
  </testsuite>
  <testsuite name="instance" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance is a Field instance" time="0.0000" classname="is a Field instance">
    </testcase>
  </testsuite>
  <testsuite name=".id" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .id is equal to info.id" time="0.0000" classname="is equal to info.id">
    </testcase>
  </testsuite>
  <testsuite name=".locales" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .locales is set to the same value as info.locales" time="0.0000" classname="is set to the same value as info.locales">
    </testcase>
  </testsuite>
  <testsuite name=".type" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .type is set to the same value as info.type" time="0.0000" classname="is set to the same value as info.type">
    </testcase>
  </testsuite>
  <testsuite name=".required" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .required is set to the same value as info.required" time="0.0000" classname="is set to the same value as info.required">
    </testcase>
  </testsuite>
  <testsuite name=".validations" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .validations is set to the same value as info.validations" time="0.0000" classname="is set to the same value as info.validations">
    </testcase>
  </testsuite>
  <testsuite name=".items" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .items is set to the same value as info.items" time="0.0000" classname="is set to the same value as info.items">
    </testcase>
    <testcase name="Field instance .items is skipped on the object if not defined in info" time="0.0000" classname="is skipped on the object if not defined in info">
    </testcase>
  </testsuite>
  <testsuite name=".getValue()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .getValue() returns the default locale&apos;s value" time="0.0000" classname="returns the default locale&apos;s value">
    </testcase>
  </testsuite>
  <testsuite name=".getValue(locale)" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0010" failures="0">
    <testcase name="Field instance .getValue(locale) throws UnknownLocaleError when locale is unknown to the field" time="0.0010" classname="throws UnknownLocaleError when locale is unknown to the field">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to the default locale &quot;en-US&quot;" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .getValue(locale) with locale set to the default locale &quot;en-US&quot; returns the value for the given locale" time="0.0000" classname="returns the value for the given locale">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to a locale without value" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .getValue(locale) with locale set to a locale without value returns undefined" time="0.0000" classname="returns undefined">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;it-IT&quot;" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .getValue(locale) with locale set to &quot;it-IT&quot; returns the value for the given locale" time="0.0000" classname="returns the value for the given locale">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;de-DE&quot;" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .getValue(locale) with locale set to &quot;de-DE&quot; returns the value for the given locale" time="0.0000" classname="returns the value for the given locale">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;locale-without-value&quot;" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .getValue(locale) with locale set to &quot;locale-without-value&quot; returns the value for the given locale" time="0.0000" classname="returns the value for the given locale">
    </testcase>
  </testsuite>
  <testsuite name=".setValue(value)" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0010" failures="0">
    <testcase name="Field instance .setValue(value) changes the locale&apos;s value" time="0.0000" classname="changes the locale&apos;s value">
    </testcase>
    <testcase name="Field instance .setValue(value) invokes channel.call(&quot;setValue&quot;, ...)" time="0.0000" classname="invokes channel.call(&quot;setValue&quot;, ...)">
    </testcase>
    <testcase name="Field instance .setValue(value) returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".setValue(value, locale)" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .setValue(value, locale) throws an error if locale is unknown to the field" time="0.0000" classname="throws an error if locale is unknown to the field">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;en-US&quot;" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;en-US&quot; changes the locale&apos;s value" time="0.0000" classname="changes the locale&apos;s value">
    </testcase>
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;en-US&quot; invokes channel.call(&quot;setValue&quot;, ...)" time="0.0000" classname="invokes channel.call(&quot;setValue&quot;, ...)">
    </testcase>
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;en-US&quot; returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;it-IT&quot;" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;it-IT&quot; changes the locale&apos;s value" time="0.0000" classname="changes the locale&apos;s value">
    </testcase>
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;it-IT&quot; invokes channel.call(&quot;setValue&quot;, ...)" time="0.0000" classname="invokes channel.call(&quot;setValue&quot;, ...)">
    </testcase>
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;it-IT&quot; returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;de-DE&quot;" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0010" failures="0">
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;de-DE&quot; changes the locale&apos;s value" time="0.0000" classname="changes the locale&apos;s value">
    </testcase>
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;de-DE&quot; invokes channel.call(&quot;setValue&quot;, ...)" time="0.0000" classname="invokes channel.call(&quot;setValue&quot;, ...)">
    </testcase>
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;de-DE&quot; returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;locale-without-value&quot;" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;locale-without-value&quot; changes the locale&apos;s value" time="0.0000" classname="changes the locale&apos;s value">
    </testcase>
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;locale-without-value&quot; invokes channel.call(&quot;setValue&quot;, ...)" time="0.0000" classname="invokes channel.call(&quot;setValue&quot;, ...)">
    </testcase>
    <testcase name="Field instance .setValue(value, locale) with locale set to &quot;locale-without-value&quot; returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".removeValue()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0010" failures="0">
    <testcase name="Field instance .removeValue() is just a call to .setValue(undefined, undefined)" time="0.0010" classname="is just a call to .setValue(undefined, undefined)">
    </testcase>
    <testcase name="Field instance .removeValue() returns the same value as .setValue(undefined, undefined)" time="0.0000" classname="returns the same value as .setValue(undefined, undefined)">
    </testcase>
    <testcase name="Field instance .removeValue() makes .getValue(undefined) return undefined" time="0.0000" classname="makes .getValue(undefined) return undefined">
    </testcase>
  </testsuite>
  <testsuite name=".removeValue(locale)" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .removeValue(locale) throws an error if locale is unknown to the field" time="0.0000" classname="throws an error if locale is unknown to the field">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;en-US&quot;" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;en-US&quot; is just a call to .setValue(undefined, &quot;en-US&quot;)" time="0.0000" classname="is just a call to .setValue(undefined, &quot;en-US&quot;)">
    </testcase>
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;en-US&quot; returns the same value as .setValue(undefined, &quot;en-US&quot;)" time="0.0000" classname="returns the same value as .setValue(undefined, &quot;en-US&quot;)">
    </testcase>
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;en-US&quot; makes .getValue(&quot;en-US&quot;) return undefined" time="0.0000" classname="makes .getValue(&quot;en-US&quot;) return undefined">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;it-IT&quot;" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0020" failures="0">
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;it-IT&quot; is just a call to .setValue(undefined, &quot;it-IT&quot;)" time="0.0010" classname="is just a call to .setValue(undefined, &quot;it-IT&quot;)">
    </testcase>
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;it-IT&quot; returns the same value as .setValue(undefined, &quot;it-IT&quot;)" time="0.0010" classname="returns the same value as .setValue(undefined, &quot;it-IT&quot;)">
    </testcase>
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;it-IT&quot; makes .getValue(&quot;it-IT&quot;) return undefined" time="0.0000" classname="makes .getValue(&quot;it-IT&quot;) return undefined">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;de-DE&quot;" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;de-DE&quot; is just a call to .setValue(undefined, &quot;de-DE&quot;)" time="0.0000" classname="is just a call to .setValue(undefined, &quot;de-DE&quot;)">
    </testcase>
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;de-DE&quot; returns the same value as .setValue(undefined, &quot;de-DE&quot;)" time="0.0000" classname="returns the same value as .setValue(undefined, &quot;de-DE&quot;)">
    </testcase>
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;de-DE&quot; makes .getValue(&quot;de-DE&quot;) return undefined" time="0.0000" classname="makes .getValue(&quot;de-DE&quot;) return undefined">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to &quot;locale-without-value&quot;" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;locale-without-value&quot; is just a call to .setValue(undefined, &quot;locale-without-value&quot;)" time="0.0000" classname="is just a call to .setValue(undefined, &quot;locale-without-value&quot;)">
    </testcase>
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;locale-without-value&quot; returns the same value as .setValue(undefined, &quot;locale-without-value&quot;)" time="0.0000" classname="returns the same value as .setValue(undefined, &quot;locale-without-value&quot;)">
    </testcase>
    <testcase name="Field instance .removeValue(locale) with locale set to &quot;locale-without-value&quot; makes .getValue(&quot;locale-without-value&quot;) return undefined" time="0.0000" classname="makes .getValue(&quot;locale-without-value&quot;) return undefined">
    </testcase>
  </testsuite>
  <testsuite name=".onValueChanged(handler)" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(handler) returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(handler) returned function can be executed without error" time="0.0000" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name=".onValueChanged(locale, handler)" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0010" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) throws an error if locale is unknown to the field" time="0.0010" classname="throws an error if locale is unknown to the field">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to en-US" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) with locale set to en-US returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) with locale set to en-US returned function can be executed without error" time="0.0000" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to it-IT" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) with locale set to it-IT returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) with locale set to it-IT returned function can be executed without error" time="0.0000" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to de-DE" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) with locale set to de-DE returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) with locale set to de-DE returned function can be executed without error" time="0.0000" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name="with locale set to locale-without-value" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) with locale set to locale-without-value returns a function to detach the handler" time="0.0000" classname="returns a function to detach the handler">
    </testcase>
  </testsuite>
  <testsuite name="returned function" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0010" failures="0">
    <testcase name="Field instance .onValueChanged(locale, handler) with locale set to locale-without-value returned function can be executed without error" time="0.0010" classname="can be executed without error">
    </testcase>
  </testsuite>
  <testsuite name="injected channel propagating &quot;valueChanged&quot;" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance injected channel propagating &quot;valueChanged&quot; does not update the value when receiving update for another field" time="0.0000" classname="does not update the value when receiving update for another field">
    </testcase>
    <testcase name="Field instance injected channel propagating &quot;valueChanged&quot; updates the value when receiving a change message" time="0.0000" classname="updates the value when receiving a change message">
    </testcase>
  </testsuite>
  <testsuite name="getForLocale called with a locale" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/field.spec.ts" time="0.0000" failures="0">
    <testcase name="Field instance getForLocale called with a locale returns a fieldLocale instance" time="0.0000" classname="returns a fieldLocale instance">
    </testcase>
    <testcase name="Field instance getForLocale called with a locale contains the expect value for that locale" time="0.0000" classname="contains the expect value for that locale">
    </testcase>
  </testsuite>
  <testsuite name="initializeApi(currentWindow, apiCreator)" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/initialize.spec.ts" time="0.0060" failures="0">
    <testcase name="initializeApi(currentWindow, apiCreator) calls apiCreator with channel and params" time="0.0010" classname="calls apiCreator with channel and params">
    </testcase>
    <testcase name="initializeApi(currentWindow, apiCreator) calls handlers for queued messages" time="0.0020" classname="calls handlers for queued messages">
    </testcase>
    <testcase name="initializeApi(currentWindow, apiCreator) adds focus handlers" time="0.0030" classname="adds focus handlers">
    </testcase>
  </testsuite>
  <testsuite name="callback" timestamp="2021-05-28T14:36:14" tests="5" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/initialize.spec.ts" time="0.0060" failures="0">
    <testcase name="initializeApi(currentWindow, apiCreator) callback is not invoked before connecting" time="0.0000" classname="is not invoked before connecting">
    </testcase>
    <testcase name="initializeApi(currentWindow, apiCreator) callback is invoked after connecting" time="0.0010" classname="is invoked after connecting">
    </testcase>
    <testcase name="initializeApi(currentWindow, apiCreator) callback is invoked when registering it after connecting" time="0.0020" classname="is invoked when registering it after connecting">
    </testcase>
    <testcase name="initializeApi(currentWindow, apiCreator) callback receives the result of the apiCreator" time="0.0010" classname="receives the result of the apiCreator">
    </testcase>
    <testcase name="initializeApi(currentWindow, apiCreator) callback receives the result of the custom API creator" time="0.0020" classname="receives the result of the custom API creator">
    </testcase>
  </testsuite>
  <testsuite name="createNavigator()" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="returned &quot;navigator&quot; object" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name=".openEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntry() invokes channel.call(&apos;navigateToContentEntity&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToContentEntity&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntry() invokes channel.call(&apos;navigateToContentEntity&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToContentEntity&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openNewEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0010" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewEntry() invokes channel.call(&apos;navigateToContentEntity&apos;)" time="0.0010" classname="invokes channel.call(&apos;navigateToContentEntity&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openNewEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewEntry() invokes channel.call(&apos;navigateToContentEntity&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToContentEntity&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0010" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAsset() is a function" time="0.0010" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAsset() invokes channel.call(&apos;navigateToContentEntity&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToContentEntity&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0010" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAsset() invokes channel.call(&apos;navigateToContentEntity&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToContentEntity&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAsset() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openNewAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewAsset() invokes channel.call(&apos;navigateToContentEntity&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToContentEntity&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openNewAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0010" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewAsset() invokes channel.call(&apos;navigateToContentEntity&apos;)" time="0.0010" classname="invokes channel.call(&apos;navigateToContentEntity&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openNewAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openPageExtension()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() invokes channel.call(&apos;navigateToPage&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToPage&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openPageExtension()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0010" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() invokes channel.call(&apos;navigateToPage&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToPage&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openPageExtension()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() invokes channel.call(&apos;navigateToPage&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToPage&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openPageExtension()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() invokes channel.call(&apos;navigateToPage&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToPage&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openPageExtension() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openCurrentAppPage()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openCurrentAppPage() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openCurrentAppPage() invokes channel.call(&apos;navigateToPage&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToPage&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openCurrentAppPage() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openAppConfig()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAppConfig() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAppConfig() invokes channel.call(&apos;navigateToAppConfig&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToAppConfig&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAppConfig() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openEntriesList()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntriesList() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntriesList() invokes channel.call(&apos;navigateToSpaceEnvRoute&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToSpaceEnvRoute&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openEntriesList() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".openAssetsList()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/navigator.spec.ts" time="0.0000" failures="0">
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAssetsList() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAssetsList() invokes channel.call(&apos;navigateToSpaceEnvRoute&apos;)" time="0.0000" classname="invokes channel.call(&apos;navigateToSpaceEnvRoute&apos;)">
    </testcase>
    <testcase name="createNavigator() returned &quot;navigator&quot; object .openAssetsList() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name="MemoizedSignal" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/signal.spec.ts" time="0.0000" failures="0">
    <testcase name="MemoizedSignal calls the listener with the initial value" time="0.0000" classname="calls the listener with the initial value">
    </testcase>
    <testcase name="MemoizedSignal throws if there is no initial value provided" time="0.0000" classname="throws if there is no initial value provided">
    </testcase>
    <testcase name="MemoizedSignal calls listener with most recently dispatched value" time="0.0000" classname="calls listener with most recently dispatched value">
    </testcase>
  </testsuite>
  <testsuite name="instance" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/signal.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="attach(listener)" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/signal.spec.ts" time="0.0000" failures="0">
    <testcase name="MemoizedSignal instance attach(listener) returns a function" time="0.0000" classname="returns a function">
    </testcase>
    <testcase name="MemoizedSignal instance attach(listener) throws an error if listener is not a function" time="0.0000" classname="throws an error if listener is not a function">
    </testcase>
    <testcase name="MemoizedSignal instance attach(listener) detaches listener when returned function is invoked" time="0.0000" classname="detaches listener when returned function is invoked">
    </testcase>
  </testsuite>
  <testsuite name="dispatch()" timestamp="2021-05-28T14:36:14" tests="5" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/signal.spec.ts" time="0.0000" failures="0">
    <testcase name="MemoizedSignal instance dispatch() fires attached listeners in the same order they were attached" time="0.0000" classname="fires attached listeners in the same order they were attached">
    </testcase>
    <testcase name="MemoizedSignal instance dispatch() does not fire detached listeners" time="0.0000" classname="does not fire detached listeners">
    </testcase>
    <testcase name="MemoizedSignal instance dispatch() fires reattached listeners" time="0.0000" classname="fires reattached listeners">
    </testcase>
    <testcase name="MemoizedSignal instance dispatch() fires same listener attached twice two times" time="0.0000" classname="fires same listener attached twice two times">
    </testcase>
    <testcase name="MemoizedSignal instance dispatch() passes given arguments to the listeners" time="0.0000" classname="passes given arguments to the listeners">
    </testcase>
  </testsuite>
  <testsuite name="Signal" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/signal.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="instance" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/signal.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="attach(listener)" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/signal.spec.ts" time="0.0010" failures="0">
    <testcase name="Signal instance attach(listener) returns a function" time="0.0000" classname="returns a function">
    </testcase>
    <testcase name="Signal instance attach(listener) throws an error if listener is not a function" time="0.0010" classname="throws an error if listener is not a function">
    </testcase>
    <testcase name="Signal instance attach(listener) detaches listener when returned function is invoked" time="0.0000" classname="detaches listener when returned function is invoked">
    </testcase>
  </testsuite>
  <testsuite name="dispatch()" timestamp="2021-05-28T14:36:14" tests="5" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/signal.spec.ts" time="0.0020" failures="0">
    <testcase name="Signal instance dispatch() fires attached listeners in the same order they were attached" time="0.0010" classname="fires attached listeners in the same order they were attached">
    </testcase>
    <testcase name="Signal instance dispatch() does not fire detached listeners" time="0.0000" classname="does not fire detached listeners">
    </testcase>
    <testcase name="Signal instance dispatch() fires reattached listeners" time="0.0010" classname="fires reattached listeners">
    </testcase>
    <testcase name="Signal instance dispatch() fires same listener attached twice two times" time="0.0000" classname="fires same listener attached twice two times">
    </testcase>
    <testcase name="Signal instance dispatch() passes given arguments to the listeners" time="0.0000" classname="passes given arguments to the listeners">
    </testcase>
  </testsuite>
  <testsuite name="createSpace()" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="returned &quot;space&quot; object" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name=".getContentType()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getContentType() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getContentType() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getContentType() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEntry() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getEntrySnapshots()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getEntrySnapshots() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEntrySnapshots() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEntrySnapshots() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getEditorInterface()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getEditorInterface() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEditorInterface() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEditorInterface() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getPublishedEntries()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0020" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getPublishedEntries() is a function" time="0.0010" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getPublishedEntries() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getPublishedEntries() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getPublishedAssets()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getPublishedAssets() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getPublishedAssets() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getPublishedAssets() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getContentTypes()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getContentTypes() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getContentTypes() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getContentTypes() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getEntries()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getEntries() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEntries() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEntries() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getEditorInterfaces()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getEditorInterfaces() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEditorInterfaces() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getEditorInterfaces() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getAssets()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getAssets() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getAssets() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getAssets() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".createContentType()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .createContentType() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createContentType() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createContentType() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".createEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .createEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createEntry() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createEntry() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".createAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .createAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".updateContentType()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .updateContentType() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .updateContentType() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .updateContentType() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".updateEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .updateEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .updateEntry() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .updateEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".updateAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .updateAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .updateAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .updateAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".deleteContentType()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .deleteContentType() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .deleteContentType() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .deleteContentType() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".deleteEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .deleteEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .deleteEntry() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .deleteEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".deleteAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .deleteAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .deleteAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .deleteAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".publishEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .publishEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .publishEntry() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .publishEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".publishAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .publishAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .publishAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .publishAsset() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".unpublishEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .unpublishEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .unpublishEntry() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .unpublishEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".unpublishAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .unpublishAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .unpublishAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .unpublishAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".archiveEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .archiveEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .archiveEntry() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .archiveEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".archiveAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .archiveAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .archiveAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .archiveAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".unarchiveEntry()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .unarchiveEntry() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .unarchiveEntry() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .unarchiveEntry() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".unarchiveAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .unarchiveAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .unarchiveAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .unarchiveAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".createUpload()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .createUpload() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createUpload() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createUpload() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".processAsset()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .processAsset() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .processAsset() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .processAsset() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".waitUntilAssetProcessed()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .waitUntilAssetProcessed() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .waitUntilAssetProcessed() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .waitUntilAssetProcessed() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".getUsers()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .getUsers() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getUsers() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .getUsers() returns the promise returned by internal channel.call()" time="0.0010" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".signRequest()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .signRequest() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .signRequest() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .signRequest() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".createTag()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0010" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .createTag() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createTag() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0010" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .createTag() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".readTags()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .readTags() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .readTags() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .readTags() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".updateTag()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .updateTag() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .updateTag() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .updateTag() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name=".deleteTag()" timestamp="2021-05-28T14:36:14" tests="3" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/space.spec.ts" time="0.0000" failures="0">
    <testcase name="createSpace() returned &quot;space&quot; object .deleteTag() is a function" time="0.0000" classname="is a function">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .deleteTag() invokes channel.call(&apos;callSpaceMethod&apos;)" time="0.0000" classname="invokes channel.call(&apos;callSpaceMethod&apos;)">
    </testcase>
    <testcase name="createSpace() returned &quot;space&quot; object .deleteTag() returns the promise returned by internal channel.call()" time="0.0000" classname="returns the promise returned by internal channel.call()">
    </testcase>
  </testsuite>
  <testsuite name="createWindow()" timestamp="2021-05-28T14:36:14" tests="0" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="returned &quot;window&quot; object" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0000" failures="0">
    <testcase name="createWindow() returned &quot;window&quot; object has all expected member functions" time="0.0000" classname="has all expected member functions">
    </testcase>
  </testsuite>
  <testsuite name=".startAutoResizer()" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0000" failures="0">
    <testcase name="createWindow() returned &quot;window&quot; object .startAutoResizer() calls .updateHeight() initially" time="0.0000" classname="calls .updateHeight() initially">
    </testcase>
    <testcase name="createWindow() returned &quot;window&quot; object .startAutoResizer() calls .updateHeight() without arguments (auto mode)" time="0.0000" classname="calls .updateHeight() without arguments (auto mode)">
    </testcase>
  </testsuite>
  <testsuite name="after auto resizer got started" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0000" failures="0">
    <testcase name="createWindow() returned &quot;window&quot; object .startAutoResizer() after auto resizer got started listens to DOM changes and invokes .updateHeigt()" time="0.0000" classname="listens to DOM changes and invokes .updateHeigt()">
    </testcase>
    <testcase name="createWindow() returned &quot;window&quot; object .startAutoResizer() after auto resizer got started listens to global &quot;resize&quot; event and invokes .updateHeight()" time="0.0000" classname="listens to global &quot;resize&quot; event and invokes .updateHeight()">
    </testcase>
  </testsuite>
  <testsuite name="followed by .stopAutoResizer()" timestamp="2021-05-28T14:36:14" tests="2" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0010" failures="0">
    <testcase name="createWindow() returned &quot;window&quot; object .startAutoResizer() followed by .stopAutoResizer() stops observing DOM and does not invoke updateHeight()" time="0.0010" classname="stops observing DOM and does not invoke updateHeight()">
    </testcase>
    <testcase name="createWindow() returned &quot;window&quot; object .startAutoResizer() followed by .stopAutoResizer() stops listening to &quot;resize&quot; event does not invoke .updateHeight()" time="0.0000" classname="stops listening to &quot;resize&quot; event does not invoke .updateHeight()">
    </testcase>
  </testsuite>
  <testsuite name=".stopAutoResizer()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0010" failures="0">
    <testcase name="createWindow() returned &quot;window&quot; object .stopAutoResizer() returns nothing, does not fail" time="0.0010" classname="returns nothing, does not fail">
    </testcase>
  </testsuite>
  <testsuite name=".updateHeight()" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0010" failures="0">
    <testcase name="createWindow() returned &quot;window&quot; object .updateHeight() notifies the parent window" time="0.0010" classname="notifies the parent window">
    </testcase>
  </testsuite>
  <testsuite name=".updateHeight(number)" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0000" failures="0">
    <testcase name="createWindow() returned &quot;window&quot; object .updateHeight(number) notifies the parent window" time="0.0000" classname="notifies the parent window">
    </testcase>
  </testsuite>
  <testsuite name="called a second time with the same number" timestamp="2021-05-28T14:36:14" tests="1" file="/Users/manuel.spagnolo/dev/contentful/ui-extensions-sdk/test/unit/window.spec.ts" time="0.0000" failures="0">
    <testcase name="createWindow() returned &quot;window&quot; object .updateHeight(number) called a second time with the same number does not notify the parent window a second time" time="0.0000" classname="does not notify the parent window a second time">
    </testcase>
  </testsuite>
</testsuites>